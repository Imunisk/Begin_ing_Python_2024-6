# 데이터 분석 어떻게 시작해야 하나요?
# 대현 곽 님의 글을 참조

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import keras import sklearn

plt.style.use('seaborn')
sns.set(font_scale=2.5)
import warnings
warnings.filterwarnings('ignore')

df_train = pd.read_csv('..../data/input/train.csv')
df_train.shape
# shape 이므로 괄호없고, 튜플로 리턴

df_train.columns
df_train.head()
df_train.dtypes
df_train.describe()

# NUll Data 확인
df_train.isnull().sum() / df_train.shape[0]
# 0인덱스로 나눈다. 백분율을 확인


# survived
f,ax = plt.subplots(1,2, figsize=(18,8))
df_train['Survived'].value_counts().plot.pie(explode=[0,0.1], autopct = '%1.1f%%', ax = ax[0], shadow = True)
ax[0].set_title('Pie plot - Survived')
ax[0].set_ylabel('')
sns.countplot('Survived', data= df_train, ax= ax[1])
ax[1].set_title('Count plot - Survived')
plt.show()


# EDA 위해 feature 시각화 작업

# Pclass
df_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index= True).count()
df_train(['Pclass', 'Survived']].groupby(['Pclass'], as_index= True).sum()
pd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True)
# 크로스테이블은 margins=True를 적으면 소계/합계가 자동으로나온다.

# mean으로 시각화
df_train[['Pclass','Survived']].groupby(['Pclass'], as_index= True).mean().plot.bar()

# 성별
f, ax = plt.subplots(1,2, figsize(18,8))
df_train[['Sex', 'Survived']].groupby(['Sex'], as_index =True).mean().plot.bar(ax=ax[0]_
ax[0].set_title('Survived vs Sex')
sns.countplot('Sex', hue= 'Survived;, data=df_train, ax = ax[1])
ax[1].set_title('Sex: Survived vs Dead')
plt.show()

